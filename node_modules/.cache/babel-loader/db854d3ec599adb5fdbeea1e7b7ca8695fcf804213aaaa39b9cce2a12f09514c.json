{"ast":null,"code":"import axios from'axios';// Base API configuration\nconst API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:3002';const api=axios.create({baseURL:API_BASE_URL,timeout:30000,headers:{'Content-Type':'application/json'}});// Request interceptor for debugging\napi.interceptors.request.use(config=>{var _config$method;console.log(`API Request: ${(_config$method=config.method)===null||_config$method===void 0?void 0:_config$method.toUpperCase()} ${config.url}`,config.data);return config;},error=>{console.error('API Request Error:',error);return Promise.reject(error);});// Response interceptor for error handling\napi.interceptors.response.use(response=>{console.log(`API Response: ${response.status}`,response.data);return response.data;},error=>{var _error$response,_error$response2,_error$response3,_error$response3$data;console.error('API Response Error:',error);if(error.code==='ECONNREFUSED'){throw new Error('API server is not running. Please start it with: npm run api:start');}if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===404){throw new Error('API endpoint not found');}if(((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.status)>=500){throw new Error('Server error. Please try again later.');}throw new Error(((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.error)||error.message||'Unknown API error');});// Semantic API endpoints\nexport const semanticAPI={// Health check\nhealth:()=>api.get('/health'),// Main processing\nprocess:data=>api.post('/process',data),// Real-time preview\npreview:data=>api.post('/preview',data),// Classification explanation\nexplain:data=>api.post('/explain',data),// Content suggestions\ngetSuggestions:data=>api.post('/suggestions',data),// Batch processing\nbatchProcess:data=>api.post('/batch',data),// User learning\naddLearning:data=>api.post('/learn',data),// Statistics\ngetStats:()=>api.get('/stats'),// Backend connection\nconnectBackend:data=>api.post('/connect-backend',data),// Templates\ngetTemplates:()=>api.get('/templates')};// Export default api instance for custom requests\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","headers","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","data","error","Promise","reject","response","status","_error$response","_error$response2","_error$response3","_error$response3$data","code","Error","message","semanticAPI","health","get","post","preview","explain","getSuggestions","batchProcess","addLearning","getStats","connectBackend","getTemplates"],"sources":["/root/Thinkerbell/Thinkerbell_template_pipeline/webapp/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Base API configuration\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3002';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 30000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor for debugging\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    console.log(`API Request: ${config.method?.toUpperCase()} ${config.url}`, config.data);\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('API Request Error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor for error handling\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    console.log(`API Response: ${response.status}`, response.data);\r\n    return response.data;\r\n  },\r\n  (error) => {\r\n    console.error('API Response Error:', error);\r\n    \r\n    if (error.code === 'ECONNREFUSED') {\r\n      throw new Error('API server is not running. Please start it with: npm run api:start');\r\n    }\r\n    \r\n    if (error.response?.status === 404) {\r\n      throw new Error('API endpoint not found');\r\n    }\r\n    \r\n    if (error.response?.status >= 500) {\r\n      throw new Error('Server error. Please try again later.');\r\n    }\r\n    \r\n    throw new Error(error.response?.data?.error || error.message || 'Unknown API error');\r\n  }\r\n);\r\n\r\n// Semantic API endpoints\r\nexport const semanticAPI = {\r\n  // Health check\r\n  health: () => api.get('/health'),\r\n  \r\n  // Main processing\r\n  process: (data) => api.post('/process', data),\r\n  \r\n  // Real-time preview\r\n  preview: (data) => api.post('/preview', data),\r\n  \r\n  // Classification explanation\r\n  explain: (data) => api.post('/explain', data),\r\n  \r\n  // Content suggestions\r\n  getSuggestions: (data) => api.post('/suggestions', data),\r\n  \r\n  // Batch processing\r\n  batchProcess: (data) => api.post('/batch', data),\r\n  \r\n  // User learning\r\n  addLearning: (data) => api.post('/learn', data),\r\n  \r\n  // Statistics\r\n  getStats: () => api.get('/stats'),\r\n  \r\n  // Backend connection\r\n  connectBackend: (data) => api.post('/connect-backend', data),\r\n  \r\n  // Templates\r\n  getTemplates: () => api.get('/templates'),\r\n};\r\n\r\n// Export default api instance for custom requests\r\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}